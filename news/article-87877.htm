<!DOCTYPE html>
<html xml:lang="zh-CN" lang="zh-CN">

<head>
        <link rel="canonical" href="https://surgenode.github.io/news/article-87877.htm" />
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <!-- The above 3 meta tags *must* come first in the head; any other head content must come *after* these tags -->
    <title>FreeRTOS进阶之系统延时完全解析_操作系统_</title>
        <meta name="description" content="目录  1. 相对延时函数vTaskDelay() 2. 绝对延时函数vTaskDelayUntil() 3.小结   FreeRTOS提供了两个系统延时函数：相对延时函数vTaskDelay()和绝" />
        <link rel="icon" href="/assets/website/img/surgenode/favicon.ico" type="image/x-icon"/>

    <meta name="author" content="Surge Node节点订阅站">
    <meta property="og:type" content="article" />
    <meta property="og:url" content="https://surgenode.github.io/news/article-87877.htm" />
    <meta property="og:site_name" content="Surge Node节点订阅站" />
    <meta property="og:title" content="FreeRTOS进阶之系统延时完全解析_操作系统_" />
    <meta property="og:image" content="https://surgenode.github.io/uploads/20240723/ff817aa6626f24a4cb0f4b22791a380b.webp" />
        <meta property="og:release_date" content="2025-04-03T08:35:00" />
    <meta property="og:updated_time" content="2025-04-03T08:35:00" />
        <meta property="og:description" content="目录  1. 相对延时函数vTaskDelay() 2. 绝对延时函数vTaskDelayUntil() 3.小结   FreeRTOS提供了两个系统延时函数：相对延时函数vTaskDelay()和绝" />
    
    <meta name="applicable-device" content="pc,mobile" />
    <meta name="renderer" content="webkit" />
    <meta name="force-rendering" content="webkit" />
    <meta http-equiv="Cache-Control" content="no-transform" />
    <meta name="robots" content="max-image-preview:large" />
    <meta name="apple-mobile-web-app-capable" content="yes">
    <meta name="apple-mobile-web-app-status-bar-style" content="black">
    <meta name="apple-mobile-web-app-title" content="FreeRTOS进阶之系统延时完全解析_操作系统_">
    <meta name="format-detection" content="telephone=no">

    <link rel="dns-prefetch" href="https:/www.googletagmanager.com">
    <link rel="dns-prefetch" href="https://www.googleadservices.com">
    <link rel="dns-prefetch" href="https://www.google-analytics.com">
    <link rel="dns-prefetch" href="https://pagead2.googlesyndication.com">
    <link rel="dns-prefetch" href="https://cm.g.doubleclick.net">
    <link rel="dns-prefetch" href="https://fonts.googleapis.com">

    <!-- Bootstrap -->
    <link href="/assets/website/css/surgenode/bootstrap.min.css" rel="stylesheet">
    <link href="/assets/website/css/surgenode/style.css" rel="stylesheet">
    <link href="https://fonts.googleapis.com/css?family=Nunito:200,200i,300,300i,400,400i,600,600i,700,700i,800,800i,900,900i" rel="stylesheet">
    <link href="/assets/website/css/surgenode/font-awesome.min.css" rel="stylesheet">
    <!-- HTML5 shim and Respond.js for IE8 support of HTML5 elements and media queries -->
    <!-- WARNING: Respond.js doesn't work if you view the page via file:// -->
    <!--[if lt IE 9]>
      <script src="https://oss.maxcdn.com/html5shiv/3.7.3/html5shiv.min.js"></script>
      <script src="https://oss.maxcdn.com/respond/1.4.2/respond.min.js"></script>
    <![endif]-->
    <!-- Google tag (gtag.js) -->
<script async src="https://www.googletagmanager.com/gtag/js?id=G-D3FHW0TV6C"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'G-D3FHW0TV6C');
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body data-page="detail">
    <!-- header-section start -->
<div class="header navbar-fixed-top">
    <div class="container">
        <div class="row">
            <div class="col-lg-4 col-md-2 col-sm-12 col-xs-12">
                <a href="/" class="navbar-brand">
                                <span>Surge Node</span>
                                </a>
            </div>
            <div class="col-lg-8 col-md-10 col-sm-12 col-xs-12">
                <div class="navigation">
                    <div id="navigation">
                        <ul>
                                                        <li><a href="/" title="首页">首页</a></li>
                                                        <li><a href="/free-nodes/" title="免费节点">免费节点</a></li>
                                                        <li><a href="/paid-subscribe/" title="推荐机场">推荐机场</a></li>
                                                        <li><a href="/client.htm" title="客户端">客户端</a></li>
                                                        <li><a href="/news/" title="新闻资讯">新闻资讯</a></li>
                                                    </ul>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<!-- header-section close -->
    <!-- header-section close -->
    <div class="page-header">
        <div class="container">
            <div class="row">
                <div class="page-section">
                    <div class="col-md-6">
                        <div class="page-description">
                            <h1 class="page-title">FreeRTOS进阶之系统延时完全解析_操作系统_</h1>
                        </div>
                    </div>
                    <div class="col-md-12">
                        <div class="page-breadcrumb">
                            <ol class="breadcrumb">
                                <li><a href="/">首页</a></li>
                                <li><a href="/news/">新闻资讯</a></li>
                                <li>正文</li>
                            </ol>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <!--pageheader close -->
        <!-- hero-section close -->
    <div class="space-medium">
        <!-- service-section start -->
        <div class="container">
            <div class="row">
                <!-- service start -->
                <div class="col-md-9">
                                    <input type="hidden" id="share-website-info" data-name="" data-url="">
                  				  				  				<div id="navCategory"> <h5 class="catalogue">目录</h5> <ul class="first_class_ul"> <li><a href="#_label0" rel="nofollow">1. 相对延时函数vTaskDelay()</a></li> <li><a href="#_label1" rel="nofollow">2. 绝对延时函数vTaskDelayUntil()</a></li> <li><a href="#_label2" rel="nofollow">3.小结</a></li> </ul> </div> <p>FreeRTOS提供了两个系统延时函数：相对延时函数vTaskDelay()和绝对延时函数</p> <p>vTaskDelayUntil()。相对延时是指每次延时都是从任务执行函数vTaskDelay()开始，延时指定的时间结束；</p> <p>绝对延时是指每隔指定的时间，执行一次调用vTaskDelayUntil()函数的任务。换句话说：任务以固定的频率执行。</p> <p>在《<a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=https://www.jb51.net/article/243522.htm"   target="_blank" rel="nofollow">FreeRTOS任务控制</a>》一文中，已经介绍了这两个API函数的原型和用法，本文将分析这两个函数的实现原理。</p> <p class="maodian"><a name="_label0" rel="nofollow"></a></p> <h2>1. 相对延时函数vTaskDelay()</h2> <p>考虑下面的任务，任务A在执行任务主体代码后，调用相对延时函数vTaskDelay()进入阻塞状态。系统中除了任务A外，还有其它任务，但是任务A的优先级最高。</p> <div class="ay1code"> <pre class="brush:cpp;">void vTaskA( void * pvParameters )     {         /* 阻塞500ms. 注:宏pdMS_TO_TICKS用于将毫秒转成节拍数,FreeRTOS V8.1.0及          以上版本才有这个宏,如果使用低版本,可以使用 500 / portTICK_RATE_MS */         const portTickType xDelay = pdMS_TO_TICKS(500);              for( ;; )         {             //  ...           //  这里为任务主体代码           //  ...                     /* 调用系统延时函数,阻塞500ms */           vTaskDelay( xDelay );         }    }  </pre> </div> <p>对于这样一个任务，执行过程如图1-1所示。当任务A获取CPU使用权后，先执行任务A的主体代码，之后调用系统延时函数vTaskDelay()进入阻塞状态。任务A进入阻塞后，其它任务得以执行。</p> <p>FreeRTOS内核会周期性的检查任务A的阻塞是否达到，如果阻塞时间达到，则将任务A设置为就绪状态。由于任务A的优先级最高，会抢占CPU，再次执行任务主体代码，不断循环。</p> <p>从图1-1可以看出，任务A每次延时都是从调用延时函数vTaskDelay()开始算起的，延时是相对于这一时刻开始的，所以叫做相对延时函数。</p> <p>从图1-1还可以看出，如果执行任务A的过程中发生中断，那么任务A执行的周期就会变长，所以使用相对延时函数vTaskDelay()，不能周期性的执行任务A。</p> <p style="text-align:center"><img decoding="async" alt="" src="http://img.555519.xyz/uploads3/20220412/5f8d73f823c767ce4c68266170084f6f.jpg"></p> <p>图1-1:相对延时函数执行示意图</p> <p>我们来看一下源码。</p> <div class="ay1code"> <pre class="brush:cpp;">void vTaskDelay( const TickType_t xTicksToDelay )  {  BaseType_t xAlreadyYielded = pdFALSE;      /* 如果延时时间为0,则不会将当前任务加入延时列表 */      if( xTicksToDelay &gt; ( TickType_t ) 0U )      {          vTaskSuspendAll();          {              /* 将当前任务从就绪列表中移除,并根据当前系统节拍计数器值计算唤醒时间,然后将任务加入延时列表 */              prvAddCurrentTaskToDelayedList( xTicksToDelay, pdFALSE );          }          xAlreadyYielded = xTaskResumeAll();      }      /* 强制执行一次上下文切换*/      if( xAlreadyYielded == pdFALSE )      {          portYIELD_WITHIN_API();      }  }</pre> </div> <p>如果延时大于0，则会将当前任务从就绪列表删除，然后加入到延时列表。是调用函数prvAddCurrentTaskToDelayedList()完成这一过程的。我们在前面一系列博文中多次提到，tasks.c中定义了很多局部静态变量，其中有一个变量xTickCount定义如下所示：</p> <div class="ay1code"> <pre class="brush:cpp;">static volatile TickType_t xTickCount = ( TickType_t ) 0U;</pre> </div> <p>这个变量用来计数，记录系统节拍中断的次数，它在启动调度器时被清零，在每次系统节拍时钟发生中断后加1。相对延时函数会使用到这个变量，xTickCount表示了当前的系统节拍中断次数，这个值加上参数规定的延时时间（以系统节拍数表示）xTicksToDelay，就是下次唤醒任务的时间，xTickCount+ xTicksToDelay会被记录到任务TCB中，随着任务一起被挂接到延时列表。</p> <p>我们知道变量xTickCount是TickType_t类型的，它也会溢出。在32位架构中，当xTicksToDelay达到4294967295后再增加，就会溢出变成0。为了解决xTickCount溢出问题，FreeRTOS使用了两个延时列表：xDelayedTaskList1和xDelayedTaskList2，并使用两个列表指针类型变量pxDelayedTaskList和pxOverflowDelayedTaskList分别指向上面的延时列表1和延时列表2（在创建任务时将延时列表指针指向延时列表）。顺便说一下，上面的两个延时列表指针变量和两个延时列表变量都是在tasks.c中定义的静态局部变量。</p> <p>如果内核判断出xTickCount+ xTicksToDelay溢出，就将当前任务挂接到列表指针pxOverflowDelayedTaskList指向的列表中，否则就挂接到列表指针pxDelayedTaskList指向的列表中。</p> <p>每次系统节拍时钟中断，中断服务函数都会检查这两个延时列表，查看延时的任务是否到期，如果时间到期，则将任务从延时列表中删除，重新加入就绪列表。如果新加入就绪列表的任务优先级大于当前任务，则会触发一次上下文切换。</p> <p class="maodian"><a name="_label1" rel="nofollow"></a></p> <h2>2. 绝对延时函数vTaskDelayUntil()</h2> <p>考虑下面的任务，任务B首先调用绝对延时函数vTaskDelayUntil ()进入阻塞状态，阻塞时间到达后，执行任务主体代码。系统中除了任务B外，还有其它任务，但是任务B的优先级最高。</p> <div class="ay1code"> <pre class="brush:cpp;">void vTaskB( void * pvParameters )    {        static portTickType xLastWakeTime;        const portTickType xFrequency = pdMS_TO_TICKS(500);        // 使用当前时间初始化变量xLastWakeTime ,注意这和vTaskDelay()函数不同       xLastWakeTime = xTaskGetTickCount();        for( ;; )        {            /* 调用系统延时函数,周期性阻塞500ms */                  vTaskDelayUntil( &amp;xLastWakeTime,xFrequency );             //  ...           //  这里为任务主体代码,周期性执行.注意这和vTaskDelay()函数也不同           //  ...          }    }  </pre> </div> <p>对于这样一个任务，执行过程如图2-1所示。当任务B获取CPU使用权后，先调用系统延时函数vTaskDelayUntil()使任务进入阻塞状态。任务B进入阻塞后，其它任务得以执行。FreeRTOS内核会周期性的检查任务A的阻塞是否达到，如果阻塞时间达到，则将任务A设置为就绪状态。</p> <p>由于任务B的优先级最高，会抢占CPU，接下来执行任务主体代码。任务主体代码执行完毕后，会继续调用系统延时函数vTaskDelayUntil()使任务进入阻塞状态，周而复始。</p> <p>从图2-1可以看出，从调用函数vTaskDelayUntil()开始，每隔固定+<br />-周期，任务B的主体代码就会被执行一次，即使任务B在执行过程中发生中断，也不会影响这个周期性，只是会缩短其它任务的执行时间！所以这个函数被称为绝对延时函数，它可以用于周期性的执行任务A的主体代码。</p> <p style="text-align:center"><img decoding="async" alt="" src="http://img.555519.xyz/uploads3/20220412/a91c2a0f77ff3e331a01eb3c1629dae9.jpg"></p> <p>图2-1：绝对延时函数执行示意图</p> <p>函数vTaskDelayUntil()是如何做到周期性的呢，我们来看一下源码。</p> <div class="ay1code"> <pre class="brush:cpp;">void vTaskDelayUntil( TickType_t * const pxPreviousWakeTime, const TickType_t xTimeIncrement )  {  TickType_t xTimeToWake;  BaseType_t xAlreadyYielded, xShouldDelay = pdFALSE;      vTaskSuspendAll();      {          /* 保存系统节拍中断次数计数器 */          const TickType_t xConstTickCount = xTickCount;          /* 计算任务下次唤醒时间(以系统节拍中断次数表示)   */          xTimeToWake = *pxPreviousWakeTime + xTimeIncrement;          /* *pxPreviousWakeTime中保存的是上次唤醒时间,唤醒后需要一定时间执行任务主体代码,如果上次唤醒时间大于当前时间,说明节拍计数器溢出了 */          if( xConstTickCount &lt; *pxPreviousWakeTime )          {              /*只有当周期性延时时间大于任务主体代码执行时间,才会将任务挂接到延时列表.*/              if( ( xTimeToWake &lt; *pxPreviousWakeTime ) &amp;&amp; ( xTimeToWake &gt; xConstTickCount ) )              {                  xShouldDelay = pdTRUE;              }          }          else          {              /* 也都是保证周期性延时时间大于任务主体代码执行时间 */              if( ( xTimeToWake &lt; *pxPreviousWakeTime ) || ( xTimeToWake &gt; xConstTickCount ) )              {                  xShouldDelay = pdTRUE;              }          }          /* 更新唤醒时间,为下一次调用本函数做准备. */          *pxPreviousWakeTime = xTimeToWake;             if( xShouldDelay != pdFALSE )          {              /* 将本任务加入延时列表,注意阻塞时间并不是以当前时间为参考,因此减去了当前系统节拍中断计数器值*/              prvAddCurrentTaskToDelayedList( xTimeToWake - xConstTickCount, pdFALSE );          }      }      xAlreadyYielded = xTaskResumeAll();         /* 强制执行一次上下文切换 */      if( xAlreadyYielded == pdFALSE )      {          portYIELD_WITHIN_API();      }  }</pre> </div> <p>与相对延时函数vTaskDelay不同，本函数增加了一个参数pxPreviousWakeTime用于指向一个变量，变量保存上次任务解除阻塞的时间。这个变量在任务开始时必须被设置成当前系统节拍中断次数（见上文的任务B举例），此后函数vTaskDelayUntil()在内部自动更新这个变量。</p> <p>由于变量xTickCount可能会溢出，所以程序必须检测各种溢出情况，并且要保证延时周期不得小于任务主体代码执行时间。这很好理解，不可能出现每5毫秒执行一个需要20毫秒才能执行完的任务。<br />如果我们以横坐标表示变量xTickCount的范围，则横坐标左端为0，右端为变量xTickCount所能表示的最大值。在如图2-2所示的三种情况下，才可以将任务加入延时列表。</p> <p>图2-2中</p> <blockquote> <p>*pxPreviousWakeTime和xTimeToWake之间表示任务周期性延时时间，</p> <p>*pxPreviousWakeTime和xConstTickCount之间表示任务B主体代码执行时间。</p> </blockquote> <p>图2-2中</p> <p>第一种情况处理系统节拍中断计数器（xConstTickCount）和唤醒时间计数器（xTimeToWake）溢出情况；</p> <p>第二种情况处理唤醒时间计数器（xTimeToWake）溢出情况</p> <p>第三种情况处理常规无溢出的情况。</p> <p>从图中可以看出，不管是溢出还是无溢出，都要求在下次唤醒任务之前，当前任务主体代码必须被执行完。表现在图2-2中，就是变量xTimeToWake总是大于变量xConstTickCount（每溢出一次的话相当于加上一次最大值Max）。</p> <p style="text-align:center"><img decoding="async" alt="" src="http://img.555519.xyz/uploads3/20220412/0213b12aa25c6658b9bad285c81b2b04.jpg"></p> <p>图2-2：将任务加入延时列表的三种情况</p> <p>计算的唤醒时间合法后，就将当前任务加入延时列表，同样延时列表也有两个。每次系统节拍中断，中断服务函数都会检查这两个延时列表，查看延时的任务是否到期，如果时间到期，则将任务从延时列表中删除，重新加入就绪列表。如果新加入就绪列表的任务优先级大于当前任务，则会触发一次上下文切换。</p> <p class="maodian"><a name="_label2" rel="nofollow"></a></p> <h2>3.小结</h2> <p>上面的例子中，调用系统延时的任务都是最高优先级，这是为了便于分析而特意为之的，实际上的任务可不一定能设置为最高优先级。对于相对延时，如果任务不是最高优先级，则任务执行周期更不可测，这个问题不大，我们本来也不会使用它作为精确延时；</p> <p>对于绝对延时函数，如果任务不是最高优先级，则仍然能周期性的将任务解除阻塞，但是解除阻塞的任务不一定能获得CPU权限，因此任务主体代码也不会总是精确周期性执行。</p> <p>如果要想精确周期性执行某个任务，可以使用系统节拍钩子函数vApplicationTickHook()，它在系统节拍中断服务函数中被调用，因此这个函数中的代码必须简洁。</p> 			                <div class="clearfix"></div>
                <div class="col-md-12 mt-5">
                                        <p>上一个：<a href="/news/article-87143.htm">猫粮生产设备多少钱一套 狗粮制作机器设备</a></p>
                                        <p>下一个：<a href="/news/article-87878.htm">成都宠物领养中心电话号码（成都领养宠物中心在哪）</a></p>
                                    </div>
                                </div>
                <div class="col-md-3">
                    <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/news/article-86440.htm" title="Docker最常用的镜像命令和容器命令">Docker最常用的镜像命令和容器命令</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-3-12-free-subscribe-node.htm" title="「3月12日」最高速度20.1M/S，2025年Surge每天更新免费节点订阅链接">「3月12日」最高速度20.1M/S，2025年Surge每天更新免费节点订阅链接</a></li>
                        <li class="py-2"><a href="/news/article-69310.htm" title="在深圳开个宠物店需要多少钱（在深圳开个宠物店需要多少钱一个月）">在深圳开个宠物店需要多少钱（在深圳开个宠物店需要多少钱一个月）</a></li>
                        <li class="py-2"><a href="/news/article-73925.htm" title="动物疫苗打到人身上有事吗视频教程全集（动物打疫苗有什么作用）">动物疫苗打到人身上有事吗视频教程全集（动物打疫苗有什么作用）</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-3-21-free-node-subscribe.htm" title="「3月21日」最高速度21.4M/S，2025年Surge每天更新免费节点订阅链接">「3月21日」最高速度21.4M/S，2025年Surge每天更新免费节点订阅链接</a></li>
                        <li class="py-2"><a href="/news/article-76633.htm" title="css实现文本垂直居中水平居中的几种方法">css实现文本垂直居中水平居中的几种方法</a></li>
                        <li class="py-2"><a href="/news/article-67389.htm" title="重庆宠物狗领养贴吧群（重庆 宠物领养）">重庆宠物狗领养贴吧群（重庆 宠物领养）</a></li>
                        <li class="py-2"><a href="/news/article-80724.htm" title="瑞鹏宠物医院工资怎么样（瑞鹏宠物医院工资待遇）">瑞鹏宠物医院工资怎么样（瑞鹏宠物医院工资待遇）</a></li>
                        <li class="py-2"><a href="/news/article-69959.htm" title="南京宠物猫领养中心地址电话查询（南京猫咪领养中心）">南京宠物猫领养中心地址电话查询（南京猫咪领养中心）</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-3-29-free-node-subscribe.htm" title="「3月29日」最高速度20.2M/S，2025年Surge每天更新免费节点订阅链接">「3月29日」最高速度20.2M/S，2025年Surge每天更新免费节点订阅链接</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">9</span> <a href="/date/2025-04/" title="2025-04 归档">2025-04</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">90</span> <a href="/date/2025-03/" title="2025-03 归档">2025-03</a></h4>
            </li>
                    </ul>
    </div>
</div>

                </div>
                <!-- service close -->
            </div>
        </div>
        <!-- service-section close -->
    </div>
        <!-- footer start -->
    <div class="tiny-footer">
        <div class="container">
            <div class="row">
                <div class="col-md-12">
                            <p>
                                <a href="/">首页</a> | 
                                <a href="/free-node/">免费节点</a> | 
                                <a href="/news/">新闻资讯</a> |
                                <a href="/about-us.htm">关于我们</a> |
                                <a href="/disclaimer.htm">免责申明</a> |
                                <a href="/privacy.htm">隐私申明</a> |
                                <a href="/sitemap.xml">网站地图</a>
                            </p>
                    Surge Node节点订阅站 版权所有 Powered by WordPress
                </div>
            </div>
        </div>
    </div>
    <!-- footer close -->
    <!-- jQuery (necessary for Bootstrap's JavaScript plugins) -->
    <!-- jQuery (necessary for Bootstrap's JavaScript plugins) -->
    <script src="/assets/website/js/frontend/surgenode/jquery.min.js" type="text/javascript"></script>
    <!-- Include all compiled plugins (below), or include individual files as needed -->
    <script src="/assets/website/js/frontend/surgenode/bootstrap.min.js" type="text/javascript"></script>
    <script src="/assets/website/js/frontend/surgenode/menumaker.js" type="text/javascript"></script>
    <script src="/assets/website/js/frontend/surgenode/navigation.js" type="text/javascript"></script>
    <script src="https://www.freeclashnode.com/assets/js/frontend/invite-url.js"></script>
    <script src="/assets/website/js/frontend/G.js"></script>
</body>

</html>