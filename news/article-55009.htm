<!DOCTYPE html>
<html xml:lang="zh-CN" lang="zh-CN">

<head>
        <link rel="canonical" href="https://surgenode.github.io/news/article-55009.htm" />
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <!-- The above 3 meta tags *must* come first in the head; any other head content must come *after* these tags -->
    <title>python实现模拟身份验证服务器综合系统设计</title>
        <meta name="description" content="完成一个 Python 程序，实现密码存储和验证，用于模拟身份验证服务器，以便破解数据库的对手无法获得用户的明文密码。实现基本的注册和登录功能。 测试样例如下：  input R timerring " />
        <link rel="icon" href="/assets/website/img/surgenode/favicon.ico" type="image/x-icon"/>

    <meta name="author" content="Surge Node节点订阅站">
    <meta property="og:type" content="article" />
    <meta property="og:url" content="https://surgenode.github.io/news/article-55009.htm" />
    <meta property="og:site_name" content="Surge Node节点订阅站" />
    <meta property="og:title" content="python实现模拟身份验证服务器综合系统设计" />
    <meta property="og:image" content="https://surgenode.github.io/uploads/20240723/ff817aa6626f24a4cb0f4b22791a380b.webp" />
        <meta property="og:release_date" content="2025-02-11T05:44:47" />
    <meta property="og:updated_time" content="2025-02-11T05:44:47" />
        <meta property="og:description" content="完成一个 Python 程序，实现密码存储和验证，用于模拟身份验证服务器，以便破解数据库的对手无法获得用户的明文密码。实现基本的注册和登录功能。 测试样例如下：  input R timerring " />
    
    <meta name="applicable-device" content="pc,mobile" />
    <meta name="renderer" content="webkit" />
    <meta name="force-rendering" content="webkit" />
    <meta http-equiv="Cache-Control" content="no-transform" />
    <meta name="robots" content="max-image-preview:large" />
    <meta name="apple-mobile-web-app-capable" content="yes">
    <meta name="apple-mobile-web-app-status-bar-style" content="black">
    <meta name="apple-mobile-web-app-title" content="python实现模拟身份验证服务器综合系统设计">
    <meta name="format-detection" content="telephone=no">

    <link rel="dns-prefetch" href="https:/www.googletagmanager.com">
    <link rel="dns-prefetch" href="https://www.googleadservices.com">
    <link rel="dns-prefetch" href="https://www.google-analytics.com">
    <link rel="dns-prefetch" href="https://pagead2.googlesyndication.com">
    <link rel="dns-prefetch" href="https://cm.g.doubleclick.net">
    <link rel="dns-prefetch" href="https://fonts.googleapis.com">

    <!-- Bootstrap -->
    <link href="/assets/website/css/surgenode/bootstrap.min.css" rel="stylesheet">
    <link href="/assets/website/css/surgenode/style.css" rel="stylesheet">
    <link href="https://fonts.googleapis.com/css?family=Nunito:200,200i,300,300i,400,400i,600,600i,700,700i,800,800i,900,900i" rel="stylesheet">
    <link href="/assets/website/css/surgenode/font-awesome.min.css" rel="stylesheet">
    <!-- HTML5 shim and Respond.js for IE8 support of HTML5 elements and media queries -->
    <!-- WARNING: Respond.js doesn't work if you view the page via file:// -->
    <!--[if lt IE 9]>
      <script src="https://oss.maxcdn.com/html5shiv/3.7.3/html5shiv.min.js"></script>
      <script src="https://oss.maxcdn.com/respond/1.4.2/respond.min.js"></script>
    <![endif]-->
    <!-- Google tag (gtag.js) -->
<script async src="https://www.googletagmanager.com/gtag/js?id=G-D3FHW0TV6C"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'G-D3FHW0TV6C');
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body data-page="detail">
    <!-- header-section start -->
<div class="header navbar-fixed-top">
    <div class="container">
        <div class="row">
            <div class="col-lg-4 col-md-2 col-sm-12 col-xs-12">
                <a href="/" class="navbar-brand">
                                <span>Surge Node</span>
                                </a>
            </div>
            <div class="col-lg-8 col-md-10 col-sm-12 col-xs-12">
                <div class="navigation">
                    <div id="navigation">
                        <ul>
                                                        <li><a href="/" title="首页">首页</a></li>
                                                        <li><a href="/free-nodes/" title="免费节点">免费节点</a></li>
                                                        <li><a href="/paid-subscribe/" title="推荐机场">推荐机场</a></li>
                                                        <li><a href="/client.htm" title="客户端">客户端</a></li>
                                                        <li><a href="/news/" title="新闻资讯">新闻资讯</a></li>
                                                    </ul>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<!-- header-section close -->
    <!-- header-section close -->
    <div class="page-header">
        <div class="container">
            <div class="row">
                <div class="page-section">
                    <div class="col-md-6">
                        <div class="page-description">
                            <h1 class="page-title">python实现模拟身份验证服务器综合系统设计</h1>
                        </div>
                    </div>
                    <div class="col-md-12">
                        <div class="page-breadcrumb">
                            <ol class="breadcrumb">
                                <li><a href="/">首页</a></li>
                                <li><a href="/news/">新闻资讯</a></li>
                                <li>正文</li>
                            </ol>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <!--pageheader close -->
        <!-- hero-section close -->
    <div class="space-medium">
        <!-- service-section start -->
        <div class="container">
            <div class="row">
                <!-- service start -->
                <div class="col-md-9">
                                    <input type="hidden" id="share-website-info" data-name="" data-url="">
                  				  				  				<div id="content_views" class="markdown_views prism-atom-one-light"> <p>完成一个 Python 程序，实现密码存储和验证，用于模拟身份验证服务器，以便破解数据库的对手无法获得用户的明文密码。实现基本的注册和登录功能。</p> <p>测试样例如下：</p> <h4> <a id="input_4" rel="nofollow"></a>input</h4> <pre><code class="prism language-txt">R timerring i love cryptography L timerring i love cryptography L timerring i love cipher L Who i love cryptography Q </code></pre> <p>该系统的源码如下：</p> <h4> <a id="source_code_23" rel="nofollow"></a>source code</h4> <pre><code class="prism language-python"><span class="token keyword">from</span> __future__ <span class="token keyword">import</span> annotations <span class="token keyword">from</span> typing <span class="token keyword">import</span> Dict <span class="token keyword">import</span> getpass <span class="token keyword">import</span> hashlib <span class="token keyword">import</span> os  database<span class="token punctuation">:</span> Dict<span class="token punctuation">[</span><span class="token builtin">str</span><span class="token punctuation">,</span> UserPassword<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token builtin">dict</span><span class="token punctuation">(</span><span class="token punctuation">)</span>   <span class="token keyword">class</span> <span class="token class-name">UserPassword</span><span class="token punctuation">:</span>     <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> in_username<span class="token punctuation">,</span> in_password_hash<span class="token punctuation">,</span> in_salt<span class="token punctuation">)</span><span class="token punctuation">:</span>         self<span class="token punctuation">.</span>username<span class="token punctuation">:</span> <span class="token builtin">str</span> <span class="token operator">=</span> in_username         self<span class="token punctuation">.</span>password_hash<span class="token punctuation">:</span> <span class="token builtin">bytes</span> <span class="token operator">=</span> in_password_hash         self<span class="token punctuation">.</span>salt<span class="token punctuation">:</span> <span class="token builtin">bytes</span> <span class="token operator">=</span> in_salt         self<span class="token punctuation">.</span>method<span class="token punctuation">:</span> <span class="token builtin">str</span> <span class="token operator">=</span> <span class="token string">'scrypt'</span>      <span class="token comment"># define verify_password function</span>     <span class="token keyword">def</span> <span class="token function">verify_password</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> password<span class="token punctuation">:</span> <span class="token builtin">str</span><span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">&gt;</span> <span class="token builtin">bool</span><span class="token punctuation">:</span>         password_ver<span class="token punctuation">:</span> <span class="token builtin">bytes</span> <span class="token operator">=</span> password<span class="token punctuation">.</span>encode<span class="token punctuation">(</span><span class="token string">"utf-8"</span><span class="token punctuation">)</span>         <span class="token comment"># use the same salt</span>         salt_ver<span class="token punctuation">:</span> <span class="token builtin">bytes</span> <span class="token operator">=</span> self<span class="token punctuation">.</span>salt         <span class="token comment"># set corresponding parameters</span>         n<span class="token punctuation">:</span> <span class="token builtin">int</span> <span class="token operator">=</span> <span class="token number">4</span>         r<span class="token punctuation">:</span> <span class="token builtin">int</span> <span class="token operator">=</span> <span class="token number">8</span>         p<span class="token punctuation">:</span> <span class="token builtin">int</span> <span class="token operator">=</span> <span class="token number">16</span>         password_hash_ver<span class="token punctuation">:</span> <span class="token builtin">bytes</span> <span class="token operator">=</span> hashlib<span class="token punctuation">.</span>scrypt<span class="token punctuation">(</span>password_ver<span class="token punctuation">,</span> salt<span class="token operator">=</span>salt_ver<span class="token punctuation">,</span> n<span class="token operator">=</span>n<span class="token punctuation">,</span> r<span class="token operator">=</span>r<span class="token punctuation">,</span> p<span class="token operator">=</span>p<span class="token punctuation">)</span>         <span class="token comment"># verify the hash value of the password</span>         <span class="token keyword">if</span> password_hash_ver <span class="token operator">==</span> self<span class="token punctuation">.</span>password_hash<span class="token punctuation">:</span>             <span class="token keyword">return</span> <span class="token boolean">True</span>         <span class="token keyword">else</span><span class="token punctuation">:</span>             <span class="token keyword">return</span> <span class="token boolean">False</span>   <span class="token keyword">def</span> <span class="token function">database_add_item</span><span class="token punctuation">(</span>user<span class="token punctuation">:</span> UserPassword<span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">&gt;</span> <span class="token boolean">None</span><span class="token punctuation">:</span>     <span class="token keyword">if</span> user<span class="token punctuation">.</span>username <span class="token keyword">in</span> database<span class="token punctuation">:</span>         <span class="token keyword">raise</span> Exception<span class="token punctuation">(</span><span class="token string">'User {} already exists.'</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>user<span class="token punctuation">.</span>username<span class="token punctuation">)</span><span class="token punctuation">)</span>     database<span class="token punctuation">[</span>user<span class="token punctuation">.</span>username<span class="token punctuation">]</span> <span class="token operator">=</span> user   <span class="token keyword">def</span> <span class="token function">login_user</span><span class="token punctuation">(</span>username<span class="token punctuation">:</span> <span class="token builtin">str</span><span class="token punctuation">,</span> password_plaintext<span class="token punctuation">:</span> <span class="token builtin">str</span><span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">&gt;</span> <span class="token builtin">bool</span><span class="token punctuation">:</span>     <span class="token keyword">if</span> username <span class="token keyword">not</span> <span class="token keyword">in</span> database<span class="token punctuation">:</span>         <span class="token keyword">raise</span> Exception<span class="token punctuation">(</span><span class="token string">'User {} does not exist.'</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>username<span class="token punctuation">)</span><span class="token punctuation">)</span>     <span class="token keyword">return</span> database<span class="token punctuation">[</span>username<span class="token punctuation">]</span><span class="token punctuation">.</span>verify_password<span class="token punctuation">(</span>password_plaintext<span class="token punctuation">)</span>   <span class="token keyword">def</span> <span class="token function">register_user</span><span class="token punctuation">(</span>username<span class="token punctuation">:</span> <span class="token builtin">str</span><span class="token punctuation">,</span> password_plaintext<span class="token punctuation">:</span> <span class="token builtin">str</span><span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">&gt;</span> <span class="token boolean">None</span><span class="token punctuation">:</span>     password_bytes<span class="token punctuation">:</span> <span class="token builtin">bytes</span> <span class="token operator">=</span> password_plaintext<span class="token punctuation">.</span>encode<span class="token punctuation">(</span><span class="token string">"utf-8"</span><span class="token punctuation">)</span>     <span class="token comment"># The os.urandom function is used to obtain random bytes of a specified length</span>     <span class="token comment"># generate the salt bytes</span>     salt_bytes<span class="token punctuation">:</span> <span class="token builtin">bytes</span> <span class="token operator">=</span> os<span class="token punctuation">.</span>urandom<span class="token punctuation">(</span><span class="token number">64</span><span class="token punctuation">)</span>     <span class="token comment"># set corresponding parameters</span>     n<span class="token punctuation">:</span> <span class="token builtin">int</span> <span class="token operator">=</span> <span class="token number">4</span>     r<span class="token punctuation">:</span> <span class="token builtin">int</span> <span class="token operator">=</span> <span class="token number">8</span>     p<span class="token punctuation">:</span> <span class="token builtin">int</span> <span class="token operator">=</span> <span class="token number">16</span>     <span class="token comment"># Hash encryption</span>     password_hash<span class="token punctuation">:</span> <span class="token builtin">bytes</span> <span class="token operator">=</span> hashlib<span class="token punctuation">.</span>scrypt<span class="token punctuation">(</span>password_bytes<span class="token punctuation">,</span> salt<span class="token operator">=</span>salt_bytes<span class="token punctuation">,</span> n<span class="token operator">=</span>n<span class="token punctuation">,</span> r<span class="token operator">=</span>r<span class="token punctuation">,</span> p<span class="token operator">=</span>p<span class="token punctuation">)</span>     <span class="token comment"># construct instance object</span>     User<span class="token punctuation">:</span> UserPassword <span class="token operator">=</span> UserPassword<span class="token punctuation">(</span>username<span class="token punctuation">,</span> password_hash<span class="token punctuation">,</span> salt_bytes<span class="token punctuation">)</span>     <span class="token comment"># Add to database</span>     database_add_item<span class="token punctuation">(</span>User<span class="token punctuation">)</span>   <span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">'__main__'</span><span class="token punctuation">:</span>     <span class="token keyword">while</span> <span class="token boolean">True</span><span class="token punctuation">:</span>         <span class="token keyword">try</span><span class="token punctuation">:</span>             <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'Usage:'</span><span class="token punctuation">)</span>             <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'\tR - register a new user'</span><span class="token punctuation">)</span>             <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'\tL - login with an existing user'</span><span class="token punctuation">)</span>             <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'\tQ - exit'</span><span class="token punctuation">)</span>             <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">''</span><span class="token punctuation">)</span>             command<span class="token punctuation">:</span> <span class="token builtin">str</span> <span class="token operator">=</span> <span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">'Input command:'</span><span class="token punctuation">)</span>             <span class="token keyword">if</span> command <span class="token operator">==</span> <span class="token string">'Q'</span><span class="token punctuation">:</span>                 exit<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>             <span class="token keyword">elif</span> command <span class="token operator">==</span> <span class="token string">'R'</span> <span class="token keyword">or</span> command <span class="token operator">==</span> <span class="token string">'L'</span><span class="token punctuation">:</span>                 username<span class="token punctuation">:</span> <span class="token builtin">str</span> <span class="token operator">=</span> <span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">'Input username:'</span><span class="token punctuation">)</span>                 <span class="token comment"># password: str = getpass.getpass('Input password:') # will not work properly for PyCharm, IDLE, etc.</span>                 password<span class="token punctuation">:</span> <span class="token builtin">str</span> <span class="token operator">=</span> <span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">'Input password:'</span><span class="token punctuation">)</span>                 <span class="token keyword">if</span> command <span class="token operator">==</span> <span class="token string">'R'</span><span class="token punctuation">:</span>                     register_user<span class="token punctuation">(</span>username<span class="token punctuation">,</span> password<span class="token punctuation">)</span>                     <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'User created successfully.'</span><span class="token punctuation">)</span>                 <span class="token keyword">elif</span> command <span class="token operator">==</span> <span class="token string">'L'</span><span class="token punctuation">:</span>                     login_valid<span class="token punctuation">:</span> <span class="token builtin">bool</span> <span class="token operator">=</span> login_user<span class="token punctuation">(</span>username<span class="token punctuation">,</span> password<span class="token punctuation">)</span>                     <span class="token keyword">if</span> login_valid<span class="token punctuation">:</span>                         <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'User logged in successfully.'</span><span class="token punctuation">)</span>                     <span class="token keyword">else</span><span class="token punctuation">:</span>                         <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'Password verification failed. Can not logged in.'</span><span class="token punctuation">)</span>                 <span class="token keyword">else</span><span class="token punctuation">:</span>                     <span class="token keyword">assert</span> <span class="token boolean">False</span>             <span class="token keyword">else</span><span class="token punctuation">:</span>                 <span class="token keyword">raise</span> Exception<span class="token punctuation">(</span><span class="token string">'Invalid command.'</span><span class="token punctuation">)</span>         <span class="token keyword">except</span> Exception <span class="token keyword">as</span> e<span class="token punctuation">:</span>             <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'Error: {}'</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">)</span>  </code></pre> <h4> <a id="output_121" rel="nofollow"></a>output</h4> <pre><code class="prism language-txt">Usage: 	R - register a new user 	L - login with an existing user 	Q - exit  Input command:R Input username:timerring Input password:i love cryptography User created successfully. Usage: 	R - register a new user 	L - login with an existing user 	Q - exit  Input command:L Input username:timerring Input password:i love cryptography User logged in successfully. Usage: 	R - register a new user 	L - login with an existing user 	Q - exit  Input command:L Input username:timerring Input password:i love cipher Password verification failed. Can not logged in. Usage: 	R - register a new user 	L - login with an existing user 	Q - exit  Input command:L Input username:Who Input password:i love cryptography Error: User Who does not exist. Usage: 	R - register a new user 	L - login with an existing user 	Q - exit  Input command:Q  进程已结束，退出代码为 0  </code></pre> <p>由输出可知，系统功能一切正常。</p> <p>受于文本篇幅原因，本文相关算法实现工程例如环境及相关库，无法展示出来，现已将资源上传，可自行点击下方链接下载。</p> <p><a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=https://download.csdn.net/download/m0_52316372/85982183"  rel="nofollow">python实现模拟身份验证服务器综合系统工程文件</a></p> </p></div> 			                <div class="clearfix"></div>
                <div class="col-md-12 mt-5">
                                        <p>上一个：<a href="/news/article-55008.htm">JavaScript如何将数组与值是数组的对象合并方法详解</a></p>
                                        <p>下一个：<a href="/news/article-55564.htm">腊肠狗什么品种（腊肠狗什么品种最好）</a></p>
                                    </div>
                                </div>
                <div class="col-md-3">
                    <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/news/article-56681.htm" title="办理动物疫苗经营手续需要哪些材料（动物怎么办理疫苗证）">办理动物疫苗经营手续需要哪些材料（动物怎么办理疫苗证）</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-2-13-free-node-subscribe-links.htm" title="「2月13日」最高速度22M/S，2025年Surge每天更新免费节点订阅链接">「2月13日」最高速度22M/S，2025年Surge每天更新免费节点订阅链接</a></li>
                        <li class="py-2"><a href="/news/article-37734.htm" title="去宠物店治疗猫藓多少钱（去宠物店治猫藓要多少钱）">去宠物店治疗猫藓多少钱（去宠物店治猫藓要多少钱）</a></li>
                        <li class="py-2"><a href="/news/article-66751.htm" title="合肥宠物领养救助站在哪里啊（合肥宠物领养合肥宠物赠送）">合肥宠物领养救助站在哪里啊（合肥宠物领养合肥宠物赠送）</a></li>
                        <li class="py-2"><a href="/news/article-44728.htm" title="生物颗粒燃料价格多少钱一吨（生物燃料颗粒料价格）">生物颗粒燃料价格多少钱一吨（生物燃料颗粒料价格）</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-1-25-node-share-links.htm" title="「1月25日」最高速度20.6M/S，2025年Surge每天更新免费节点订阅链接">「1月25日」最高速度20.6M/S，2025年Surge每天更新免费节点订阅链接</a></li>
                        <li class="py-2"><a href="/news/article-52300.htm" title="猫猫得了猫瘟还能活吗（猫咪得了猫瘟之后还会再得么）">猫猫得了猫瘟还能活吗（猫咪得了猫瘟之后还会再得么）</a></li>
                        <li class="py-2"><a href="/news/article-63671.htm" title="北京鹦鹉看病宠物医院（北京哪里给鹦鹉看病）">北京鹦鹉看病宠物医院（北京哪里给鹦鹉看病）</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-2-16-node-share-links.htm" title="「2月16日」最高速度22.5M/S，2025年Surge每天更新免费节点订阅链接">「2月16日」最高速度22.5M/S，2025年Surge每天更新免费节点订阅链接</a></li>
                        <li class="py-2"><a href="/news/article-41245.htm" title="附近免费领养狗边牧（附近免费领养狗边牧的地方）">附近免费领养狗边牧（附近免费领养狗边牧的地方）</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">12</span> <a href="/date/2025-03/" title="2025-03 归档">2025-03</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">84</span> <a href="/date/2025-02/" title="2025-02 归档">2025-02</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">84</span> <a href="/date/2025-01/" title="2025-01 归档">2025-01</a></h4>
            </li>
                    </ul>
    </div>
</div>

                </div>
                <!-- service close -->
            </div>
        </div>
        <!-- service-section close -->
    </div>
        <!-- footer start -->
    <div class="tiny-footer">
        <div class="container">
            <div class="row">
                <div class="col-md-12">
                            <p>
                                <a href="/">首页</a> | 
                                <a href="/free-node/">免费节点</a> | 
                                <a href="/news/">新闻资讯</a> |
                                <a href="/about-us.htm">关于我们</a> |
                                <a href="/disclaimer.htm">免责申明</a> |
                                <a href="/privacy.htm">隐私申明</a> |
                                <a href="/sitemap.xml">网站地图</a>
                            </p>
                    Surge Node节点订阅站 版权所有 Powered by WordPress
                </div>
            </div>
        </div>
    </div>
    <!-- footer close -->
    <!-- jQuery (necessary for Bootstrap's JavaScript plugins) -->
    <!-- jQuery (necessary for Bootstrap's JavaScript plugins) -->
    <script src="/assets/website/js/frontend/surgenode/jquery.min.js" type="text/javascript"></script>
    <!-- Include all compiled plugins (below), or include individual files as needed -->
    <script src="/assets/website/js/frontend/surgenode/bootstrap.min.js" type="text/javascript"></script>
    <script src="/assets/website/js/frontend/surgenode/menumaker.js" type="text/javascript"></script>
    <script src="/assets/website/js/frontend/surgenode/navigation.js" type="text/javascript"></script>
    <script src="https://www.freeclashnode.com/assets/js/frontend/invite-url.js"></script>
    <script src="/assets/website/js/frontend/G.js"></script>
</body>

</html>