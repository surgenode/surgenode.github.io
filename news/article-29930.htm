<!DOCTYPE html>
<html lang="zh-CN">

<head>
        <link rel="canonical" href="https://surgenode.github.io/news/article-29930.htm" />
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <!-- The above 3 meta tags *must* come first in the head; any other head content must come *after* these tags -->
    <title>.NET Core(.NET6)中gRPC注册到Consul详解</title>
        <meta name="description" content="上一篇文章介绍了.NET Core 中使用gRPC，在微服务中，我们通常要把服务做成服务注册，服务发现的方式，那么这里来说一下gRPC是如何注册到Consul中的。 Consul的安装这里就不介绍了，" />
        <link rel="icon" href="/assets/website/img/surgenode/favicon.ico" type="image/x-icon"/>
    <!-- Bootstrap -->
    <link href="/assets/website/css/surgenode/bootstrap.min.css" rel="stylesheet">
    <link href="/assets/website/css/surgenode/style.css" rel="stylesheet">
    <link href="https://fonts.googleapis.com/css?family=Nunito:200,200i,300,300i,400,400i,600,600i,700,700i,800,800i,900,900i" rel="stylesheet">
    <link href="/assets/website/css/surgenode/font-awesome.min.css" rel="stylesheet">
    <!-- HTML5 shim and Respond.js for IE8 support of HTML5 elements and media queries -->
    <!-- WARNING: Respond.js doesn't work if you view the page via file:// -->
    <!--[if lt IE 9]>
      <script src="https://oss.maxcdn.com/html5shiv/3.7.3/html5shiv.min.js"></script>
      <script src="https://oss.maxcdn.com/respond/1.4.2/respond.min.js"></script>
    <![endif]-->
    <!-- Google tag (gtag.js) -->
<script async src="https://www.googletagmanager.com/gtag/js?id=G-D3FHW0TV6C"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'G-D3FHW0TV6C');
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body data-page="detail">
    <!-- header-section start -->
<div class="header navbar-fixed-top">
    <div class="container">
        <div class="row">
            <div class="col-lg-4 col-md-2 col-sm-12 col-xs-12">
                                <a href="/" class="navbar-brand">
                    Surge Node
                </a>
                            </div>
            <div class="col-lg-8 col-md-10 col-sm-12 col-xs-12">
                <div class="navigation">
                    <div id="navigation">
                        <ul>
                                                        <li><a href="/" title="首页">首页</a></li>
                                                        <li><a href="/free-nodes/" title="免费节点">免费节点</a></li>
                                                        <li><a href="/paid-subscribe/" title="推荐机场">推荐机场</a></li>
                                                        <li><a href="/news/" title="新闻资讯">新闻资讯</a></li>
                                                        <li><a href="#">关于</a></li>
                            <li><a href="#">联系</a></li>
                        </ul>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<!-- header-section close -->
    <!-- header-section close -->
    <div class="page-header">
        <div class="container">
            <div class="row">
                <div class="page-section">
                    <div class="col-md-6">
                        <div class="page-description">
                            <h1 class="page-title">.NET Core(.NET6)中gRPC注册到Consul详解</h1>
                        </div>
                    </div>
                    <div class="col-md-12">
                        <div class="page-breadcrumb">
                            <ol class="breadcrumb">
                                <li><a href="/">首页</a></li>
                                <li><a href="/news/">新闻资讯</a></li>
                                <li>正文</li>
                            </ol>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <!--pageheader close -->
        <!-- hero-section close -->
    <div class="space-medium">
        <!-- service-section start -->
        <div class="container">
            <div class="row">
                <!-- service start -->
                <div class="col-md-9">
                                    <input type="hidden" id="share-website-info" data-name="" data-url="">
                  				  				  				</h1> <p>上一篇文章介绍了.NET Core 中使用gRPC，在微服务中，我们通常要把服务做成服务注册，服务发现的方式，那么这里来说一下gRPC是如何注册到Consul中的。</p> <p>Consul的安装这里就不介绍了，在之前的篇文章中已经写过：<a id="cb_post_title_url" class="postTitle2 vertical-middle" href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=https://www.cnblogs.com/wei325/p/15303859.html"  rel="nofollow">Consul+Ocelot+Polly在.NetCore中使用(.NET5)-Consul服务注册，服务发现</a></p> <p>这里Consul已经安装好。</p> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220509/ed0fb06ea6ebd487dc46b8d539b1996b.jpg" alt=".NET Core(.NET6)中gRPC注册到Consul详解"></p> </h1> <h2>1.扩展gRPC注册到Consul封装类</h2> <p>这里沿用上一篇的gRPC的代码，如果服务带api和gRPC的话用http的方式或gRPC的方式注册到可以，http的方式上面文章中的Consul注册和发现中已经有，这里介绍单gRPC的服务的注册。</p> <p>先在appsettings.json中加入Consul信息代码</p> <div class="cnblogs_code"> <pre><span style="color: rgba(0, 0, 0, 1)">{</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">Logging</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(0, 0, 0, 1)">: {</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">LogLevel</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(0, 0, 0, 1)">: {</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">Default</span><span style="color: rgba(128, 0, 0, 1)">"</span>:<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">Information</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(0, 0, 0, 1)">,</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">Microsoft.AspNetCore</span><span style="color: rgba(128, 0, 0, 1)">"</span>:<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">Warning</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(0, 0, 0, 1)">     }   },</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">AllowedHosts</span><span style="color: rgba(128, 0, 0, 1)">"</span>:<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">*</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(0, 0, 0, 1)">,</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">Kestrel</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(0, 0, 0, 1)">: {</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">EndpointDefaults</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(0, 0, 0, 1)">: {</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">Protocols</span><span style="color: rgba(128, 0, 0, 1)">"</span>:<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">Http2</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(0, 0, 0, 1)">     }   },</span><span style="color: rgba(255, 0, 0, 1)">"Consul": {     "consulAddress": "http://127.0.0.1:8500",     "serviceName": "api_gRPC",     "currentIp": "127.0.0.1",     "currentPort": "5246"</span><span style="color: rgba(0, 0, 0, 1)"><span style="color: rgba(255, 0, 0, 1)">   }</span> }</span></pre> </div> <p>然后新建ConsulRegister.cs封装注册到Consul的类</p> <div class="cnblogs_code"> <pre><span style="color: rgba(128, 128, 128, 1)">///</span><span style="color: rgba(128, 128, 128, 1)">&lt;summary&gt;</span><span style="color: rgba(128, 128, 128, 1)">///</span><span style="color: rgba(0, 128, 0, 1)"> Consul注册</span><span style="color: rgba(128, 128, 128, 1)">///</span><span style="color: rgba(128, 128, 128, 1)">&lt;/summary&gt;</span><span style="color: rgba(0, 0, 255, 1)">public</span><span style="color: rgba(0, 0, 255, 1)">static</span><span style="color: rgba(0, 0, 255, 1)">class</span><span style="color: rgba(0, 0, 0, 1)"> ConsulRegister     {</span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)">服务注册</span><span style="color: rgba(0, 0, 255, 1)">public</span><span style="color: rgba(0, 0, 255, 1)">static</span> IApplicationBuilder UseConsul(<span style="color: rgba(0, 0, 255, 1)">this</span><span style="color: rgba(0, 0, 0, 1)"> IApplicationBuilder app, IConfiguration configuration)         {</span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)"> 获取主机生命周期管理接口</span><span style="color: rgba(0, 0, 255, 1)">var</span> lifetime = app.ApplicationServices.GetRequiredService&lt;IHostApplicationLifetime&gt;<span style="color: rgba(0, 0, 0, 1)">();              ConsulClient client</span>=<span style="color: rgba(0, 0, 255, 1)">new</span> ConsulClient(c =&gt;<span style="color: rgba(0, 0, 0, 1)">             {                 c.Address</span>=<span style="color: rgba(0, 0, 255, 1)">new</span> Uri(configuration[<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">Consul:consulAddress</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(0, 0, 0, 1)">]);                 c.Datacenter</span>=<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">dc1</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(0, 0, 0, 1)">;             });</span><span style="color: rgba(0, 0, 255, 1)">string</span> ip = configuration[<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">ip</span><span style="color: rgba(128, 0, 0, 1)">"</span>];<span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)">优先接收变量的值</span><span style="color: rgba(0, 0, 255, 1)">string</span> port = configuration[<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">port</span><span style="color: rgba(128, 0, 0, 1)">"</span>];<span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)">优先接收变量的值</span><span style="color: rgba(0, 0, 255, 1)">string</span> currentIp = configuration[<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">Consul:currentIP</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(0, 0, 0, 1)">];</span><span style="color: rgba(0, 0, 255, 1)">string</span> currentPort = configuration[<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">Consul:currentPort</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(0, 0, 0, 1)">];              ip</span>=<span style="color: rgba(0, 0, 255, 1)">string</span>.IsNullOrEmpty(ip) ? currentIp : ip;<span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)">当前程序的IP</span>             port =<span style="color: rgba(0, 0, 255, 1)">string</span>.IsNullOrEmpty(port) ? currentPort : port;<span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)">当前程序的端口</span><span style="color: rgba(0, 0, 255, 1)">string</span> serviceId = $<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">service:{ip}:{port}</span><span style="color: rgba(128, 0, 0, 1)">"</span>;<span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)">服务ID，一个服务是唯一的</span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)">服务注册</span>             client.Agent.ServiceRegister(<span style="color: rgba(0, 0, 255, 1)">new</span><span style="color: rgba(0, 0, 0, 1)"> AgentServiceRegistration()             {                 ID</span>= serviceId,<span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)">唯一的</span>                 Name = configuration[<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">Consul:serviceName</span><span style="color: rgba(128, 0, 0, 1)">"</span>],<span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)">组名称-Group</span>                 Address = ip,<span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)">ip地址</span>                 Port =<span style="color: rgba(0, 0, 255, 1)">int</span>.Parse(port),<span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)">端口</span>                 Tags =<span style="color: rgba(0, 0, 255, 1)">new</span><span style="color: rgba(0, 0, 255, 1)">string</span>[] {<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">api站点</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(0, 0, 0, 1)"> },                 Check</span>=<span style="color: rgba(0, 0, 255, 1)">new</span><span style="color: rgba(0, 0, 0, 1)"> AgentServiceCheck()                 {                     Interval</span>= TimeSpan.FromSeconds(<span style="color: rgba(128, 0, 128, 1)">10</span>),<span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)">多久检查一次心跳</span>                     GRPC = $<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">{ip}:{port}</span><span style="color: rgba(128, 0, 0, 1)">"</span>,<span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)">gRPC注册特有</span>                     GRPCUseTLS=<span style="color: rgba(0, 0, 255, 1)">false</span>,<span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)">支持http</span>                     Timeout = TimeSpan.FromSeconds(<span style="color: rgba(128, 0, 128, 1)">5</span>),<span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)">超时时间</span>                     DeregisterCriticalServiceAfter = TimeSpan.FromSeconds(<span style="color: rgba(128, 0, 128, 1)">5</span>)<span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)">服务停止多久后注销服务</span><span style="color: rgba(0, 0, 0, 1)">                }              }).Wait();</span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)">应用程序终止时,注销服务</span>             lifetime.ApplicationStopping.Register(() =&gt;<span style="color: rgba(0, 0, 0, 1)">             {                 client.Agent.ServiceDeregister(serviceId).Wait();             });</span><span style="color: rgba(0, 0, 255, 1)">return</span><span style="color: rgba(0, 0, 0, 1)"> app;         }     }</span></pre> </div> <p>Program.cs增加使用这个扩展类</p> <div class="cnblogs_code"> <pre><span style="color: rgba(0, 0, 255, 1)">using</span><span style="color: rgba(0, 0, 0, 1)"> GrpcDemo.Service.Services;</span><span style="color: rgba(0, 0, 255, 1)">using</span><span style="color: rgba(0, 0, 0, 1)"> GrpcDemo.Service.Utils;</span><span style="color: rgba(0, 0, 255, 1)">var</span> builder =<span style="color: rgba(0, 0, 0, 1)"> WebApplication.CreateBuilder(args);</span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)"> Additional configuration is required to successfully run gRPC on macOS.</span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)"> For instructions on how to configure Kestrel and gRPC clients on macOS, visit</span><span style="color: rgba(0, 128, 0, 1); text-decoration: underline">https://go.microsoft.com/fwlink/?linkid=2099682</span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)"> Add services to the container.</span><span style="color: rgba(0, 0, 0, 1)">builder.Services.AddGrpc();</span><span style="color: rgba(0, 0, 255, 1)">var</span> app =<span style="color: rgba(0, 0, 0, 1)"> builder.Build(); IConfiguration _configuration</span>=<span style="color: rgba(0, 0, 0, 1)"> builder.Configuration;</span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)"> Configure the HTTP request pipeline.</span> app.MapGrpcService&lt;GreeterService&gt;<span style="color: rgba(0, 0, 0, 1)">(); app.MapGrpcService</span>&lt;OrderService&gt;<span style="color: rgba(0, 0, 0, 1)">(); app.MapGrpcService</span>&lt;HealthCheckService&gt;<span style="color: rgba(0, 0, 0, 1)">(); app.MapGet(</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">/</span><span style="color: rgba(128, 0, 0, 1)">"</span>, () =&gt;<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">Communication with gRPC endpoints must be made through a gRPC client. To learn how to create a client, visit: https://go.microsoft.com/fwlink/?linkid=2086909</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(0, 0, 0, 1)">);<span style="color: rgba(255, 0, 0, 1)">app.UseConsul(_configuration);</span> app.Run();</span></pre> </div> <h2>2.创建健康检查gRPC服务</h2> <p>1.新建健康检查proto文件HealthCheck.proto</p> <div class="cnblogs_code"> <pre>syntax =<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">proto3</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(0, 0, 0, 1)">;  package grpc.health.v1;  message HealthCheckRequest {</span><span style="color: rgba(0, 0, 255, 1)">string</span> service =<span style="color: rgba(128, 0, 128, 1)">1</span><span style="color: rgba(0, 0, 0, 1)">; }  message HealthCheckResponse {</span><span style="color: rgba(0, 0, 255, 1)">enum</span><span style="color: rgba(0, 0, 0, 1)"> ServingStatus {         UNKNOWN</span>=<span style="color: rgba(128, 0, 128, 1)">0</span><span style="color: rgba(0, 0, 0, 1)">;         SERVING</span>=<span style="color: rgba(128, 0, 128, 1)">1</span><span style="color: rgba(0, 0, 0, 1)">;         NOT_SERVING</span>=<span style="color: rgba(128, 0, 128, 1)">2</span><span style="color: rgba(0, 0, 0, 1)">;     }     ServingStatus status</span>=<span style="color: rgba(128, 0, 128, 1)">1</span><span style="color: rgba(0, 0, 0, 1)">; }  service Health {     rpc Check(HealthCheckRequest) returns (HealthCheckResponse);      rpc Watch(HealthCheckRequest) returns (stream HealthCheckResponse); }</span></pre> </div> <p>2.新建健康检查服务实现上面proto协议HealthCheckService.cs</p> <div class="cnblogs_code"> <pre><span style="color: rgba(0, 0, 255, 1)">public</span><span style="color: rgba(0, 0, 255, 1)">class</span><span style="color: rgba(0, 0, 0, 1)"> HealthCheckService : Health.HealthBase     {</span><span style="color: rgba(0, 0, 255, 1)">public</span><span style="color: rgba(0, 0, 255, 1)">override</span> Task&lt;HealthCheckResponse&gt;<span style="color: rgba(0, 0, 0, 1)"> Check(HealthCheckRequest request, ServerCallContext context)         {             Console.WriteLine($</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">This is {nameof(HealthCheckService)} Check</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(0, 0, 0, 1)">);</span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)">TODO:检查逻辑</span><span style="color: rgba(0, 0, 255, 1)">return</span> Task.FromResult(<span style="color: rgba(0, 0, 255, 1)">new</span> HealthCheckResponse() { Status =<span style="color: rgba(0, 0, 0, 1)"> HealthCheckResponse.Types.ServingStatus.Serving });         }</span><span style="color: rgba(0, 0, 255, 1)">public</span><span style="color: rgba(0, 0, 255, 1)">override</span><span style="color: rgba(0, 0, 255, 1)">async</span> Task Watch(HealthCheckRequest request, IServerStreamWriter&lt;HealthCheckResponse&gt;<span style="color: rgba(0, 0, 0, 1)"> responseStream, ServerCallContext context)         {</span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)">TODO:检查逻辑</span><span style="color: rgba(0, 0, 255, 1)">await</span> responseStream.WriteAsync(<span style="color: rgba(0, 0, 255, 1)">new</span><span style="color: rgba(0, 0, 0, 1)"> HealthCheckResponse()             { Status</span>=<span style="color: rgba(0, 0, 0, 1)"> HealthCheckResponse.Types.ServingStatus.Serving });         }     }</span></pre> </div> <p>3.在Program.cs中把服务注册到gRPC管道</p> <div class="cnblogs_code"> <pre><span style="color: rgba(0, 0, 255, 1)">using</span><span style="color: rgba(0, 0, 0, 1)"> GrpcDemo.Service.Services;</span><span style="color: rgba(0, 0, 255, 1)">using</span><span style="color: rgba(0, 0, 0, 1)"> GrpcDemo.Service.Utils;</span><span style="color: rgba(0, 0, 255, 1)">var</span> builder =<span style="color: rgba(0, 0, 0, 1)"> WebApplication.CreateBuilder(args);</span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)"> Additional configuration is required to successfully run gRPC on macOS.</span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)"> For instructions on how to configure Kestrel and gRPC clients on macOS, visit</span><span style="color: rgba(0, 128, 0, 1); text-decoration: underline">https://go.microsoft.com/fwlink/?linkid=2099682</span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)"> Add services to the container.</span><span style="color: rgba(0, 0, 0, 1)">builder.Services.AddGrpc();</span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)">配置获取</span><span style="color: rgba(0, 0, 255, 1)">var</span> app =<span style="color: rgba(0, 0, 0, 1)"> builder.Build(); IConfiguration _configuration</span>=<span style="color: rgba(0, 0, 0, 1)"> builder.Configuration;</span><span style="color: rgba(0, 128, 0, 1)">//</span><span style="color: rgba(0, 128, 0, 1)"> Configure the HTTP request pipeline.</span> app.MapGrpcService&lt;GreeterService&gt;<span style="color: rgba(0, 0, 0, 1)">(); app.MapGrpcService</span>&lt;OrderService&gt;<span style="color: rgba(0, 0, 0, 1)">();<span style="color: rgba(255, 0, 0, 1)">app.MapGrpcService</span></span><span style="color: rgba(255, 0, 0, 1)">&lt;HealthCheckService&gt;</span><span style="color: rgba(0, 0, 0, 1)"><span style="color: rgba(255, 0, 0, 1)">();</span> app.MapGet(</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">/</span><span style="color: rgba(128, 0, 0, 1)">"</span>, () =&gt;<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">Communication with gRPC endpoints must be made through a gRPC client. To learn how to create a client, visit: https://go.microsoft.com/fwlink/?linkid=2086909</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(0, 0, 0, 1)">);  app.UseConsul(_configuration); app.Run();</span></pre> </div> <p>到这里服务注册就完成了，服务发现和上面简介的链接文章中一模一样，启动项目查看效果。</p> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220509/dc26072fa1d7fe09124b611d80124d62.jpg" alt=".NET Core(.NET6)中gRPC注册到Consul详解"></p> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220509/e1b81f912971ce22ba44bd3d9a4cf422.jpg" alt=".NET Core(.NET6)中gRPC注册到Consul详解"></p> 			                <div class="clearfix"></div>
                <div class="col-md-12 mt-5">
                                        <p>上一个：<a href="/news/article-29642.htm">动物打疫苗在哪打的 动物打疫苗在哪打的啊</a></p>
                                        <p>下一个：<a href="/news/article-29932.htm">猫咪打疫苗去宠物店还是宠物医院比较好?（给猫打针去防疫站还是宠物医院）</a></p>
                                    </div>
                                </div>
                <div class="col-md-3">
                    <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/free-nodes/2024-8-4-free-node-subscribe-links.htm" title="「8月4日」最高速度22.7M/S，2024年Surge每天更新免费节点订阅链接">「8月4日」最高速度22.7M/S，2024年Surge每天更新免费节点订阅链接</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-12-4-node-share.htm" title="「12月4日」最高速度18M/S，2024年Surge每天更新免费节点订阅链接">「12月4日」最高速度18M/S，2024年Surge每天更新免费节点订阅链接</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-11-21-node-share.htm" title="「11月21日」最高速度20.4M/S，2024年Surge每天更新免费节点订阅链接">「11月21日」最高速度20.4M/S，2024年Surge每天更新免费节点订阅链接</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-9-25-node-share-links.htm" title="「9月25日」最高速度22.5M/S，2024年Surge每天更新免费节点订阅链接">「9月25日」最高速度22.5M/S，2024年Surge每天更新免费节点订阅链接</a></li>
                        <li class="py-2"><a href="/news/article-29185.htm" title="广州宠物领养网免费领养猫狗（广州哪里有宠物领养机构）">广州宠物领养网免费领养猫狗（广州哪里有宠物领养机构）</a></li>
                        <li class="py-2"><a href="/news/article-23158.htm" title="中北镇天宠宠物医院电话（天津市天宠宠物医院）">中北镇天宠宠物医院电话（天津市天宠宠物医院）</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-10-5-free-high-speed-nodes.htm" title="「10月5日」最高速度20M/S，2024年Surge每天更新免费节点订阅链接">「10月5日」最高速度20M/S，2024年Surge每天更新免费节点订阅链接</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-8-17-node-share-links.htm" title="「8月17日」最高速度20.3M/S，2024年Surge每天更新免费节点订阅链接">「8月17日」最高速度20.3M/S，2024年Surge每天更新免费节点订阅链接</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-10-12-free-subscribe-node.htm" title="「10月12日」最高速度22.9M/S，2024年Surge每天更新免费节点订阅链接">「10月12日」最高速度22.9M/S，2024年Surge每天更新免费节点订阅链接</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-12-3-node-share-links.htm" title="「12月3日」最高速度22.8M/S，2024年Surge每天更新免费节点订阅链接">「12月3日」最高速度22.8M/S，2024年Surge每天更新免费节点订阅链接</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">72</span> <a href="/date/2024-12/" title="2024-12 归档">2024-12</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">34</span> <a href="/date/2024-11/" title="2024-11 归档">2024-11</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">31</span> <a href="/date/2024-10/" title="2024-10 归档">2024-10</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">30</span> <a href="/date/2024-09/" title="2024-09 归档">2024-09</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">31</span> <a href="/date/2024-08/" title="2024-08 归档">2024-08</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">9</span> <a href="/date/2024-07/" title="2024-07 归档">2024-07</a></h4>
            </li>
                    </ul>
    </div>
</div>

                </div>
                <!-- service close -->
            </div>
        </div>
        <!-- service-section close -->
    </div>
        <!-- footer start -->
    <div class="tiny-footer">
        <div class="container">
            <div class="row">
                <div class="col-md-12">
                            <p>
                                <a href="/">首页</a> | 
                                <a href="/free-node/">免费节点</a> | 
                                <a href="/news/">新闻资讯</a> |
                                <a href="/about-us.htm">关于我们</a> |
                                <a href="/disclaimer.htm">免责申明</a> |
                                <a href="/privacy.htm">隐私申明</a> |
                                <a href="/sitemap.xml">网站地图</a>
                            </p>
                    Surge Node节点订阅站 版权所有 Powered by WordPress
                </div>
            </div>
        </div>
    </div>
    <!-- footer close -->
    <!-- jQuery (necessary for Bootstrap's JavaScript plugins) -->
    <!-- jQuery (necessary for Bootstrap's JavaScript plugins) -->
    <script src="/assets/website/js/frontend/surgenode/jquery.min.js" type="text/javascript"></script>
    <!-- Include all compiled plugins (below), or include individual files as needed -->
    <script src="/assets/website/js/frontend/surgenode/bootstrap.min.js" type="text/javascript"></script>
    <script src="/assets/website/js/frontend/surgenode/menumaker.js" type="text/javascript"></script>
    <script src="/assets/website/js/frontend/surgenode/navigation.js" type="text/javascript"></script>
    <script src="https://www.freeclashnode.com/assets/js/frontend/invite-url.js"></script>
    <script src="/assets/website/js/frontend/G.js"></script>
</body>

</html>